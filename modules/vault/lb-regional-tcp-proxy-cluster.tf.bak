#resource "google_compute_region_health_check" "proxy_cluster" {
#  name                = "vault-proxy-cluster-lb-${var.unique_id}"
#  check_interval_sec  = 30
#  timeout_sec         = 5
#  healthy_threshold   = 3
#  unhealthy_threshold = 5
#  https_health_check {
#    port         = 8200
#    port_name    = "vault-api"
#    request_path = "/v1/sys/health"
#  }
#  log_config {
#    enable = false
#  }
#}
#
#resource "google_compute_region_backend_service" "proxy_cluster" {
#  provider = google-beta
#
#  name          = "vault-proxy-cluster-lb-${var.unique_id}"
#  health_checks = [google_compute_region_health_check.proxy_cluster.id]
#  port_name     = "vault-cluster"
#  protocol      = "TCP"
#  #  load_balancing_scheme = "INTERNAL_MANAGED"
#  load_balancing_scheme = var.load_balancing_scheme
#
#  #  security_policy = google_compute_security_policy.default.id
#  timeout_sec = 10
#
#  log_config {
#    enable      = true
#    sample_rate = 1.0
#  }
#
#  backend {
#    group           = module.mig.instance_group
#    balancing_mode  = "UTILIZATION"
#    capacity_scaler = 1.0
#  }
#}
#
#resource "google_compute_address" "proxy_cluster" {
#  name = "vault-proxy-cluster-lb-${var.unique_id}"
#  # Following parameter needed for internal LB
#  #  address_type = "INTERNAL"
#  #  subnetwork   = var.subnet_name
#}
#
#resource "google_compute_region_target_tcp_proxy" "proxy_cluster" {
#  provider = google-beta
#
#  name            = "vault-proxy-cluster-lb-${var.unique_id}"
#  backend_service = google_compute_region_backend_service.proxy_cluster.id
#}
#
#resource "google_compute_forwarding_rule" "proxy_cluster" {
#  provider = google-beta
#
#  name                  = "vault-proxy-cluster-lb-${var.unique_id}"
#  ip_address            = google_compute_address.proxy_cluster.id
#  ip_protocol           = "TCP"
#  load_balancing_scheme = var.load_balancing_scheme
#  network               = var.network_name
#  # Following parameter needed for internal LB
#  #  load_balancing_scheme = "INTERNAL_MANAGED"
#  #  subnetwork            = var.subnet_name
#  port_range = "443"
#  target     = google_compute_region_target_tcp_proxy.proxy_cluster.id
#}